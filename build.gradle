/**
 * 构建web-devil框架标准web工程
 * @author leafxt
 * @date 2017年5月12日
 */

buildscript {
	repositories {
		jcenter() 
	}
	dependencies {
		classpath 'com.bmuschko:gradle-tomcat-plugin:+'
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:+'
    }
}

apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'eclipse'
//apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'org.springframework.boot'

repositories {
	mavenLocal()
	mavenCentral()
}

repositories {
    jcenter()
}

sourceCompatibility = 1.9
targetCompatibility = 1.9

def tomcatVersion = '8.5.24'
dependencies {
	compile 'junit:junit:+'
	compile	'mysql:mysql-connector-java:+'
	compile('org.apache.commons:commons-lang3:+')
	compile('net.windsoft:web-devil-core:+') {
		exclude module: 'slf4j-log4j12'
	}
			
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
	tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2"
	tomcat "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
		    
}

//gretty {
//	httpPort = 9090
//	contextPath = 'test'
//}

/*
eclipse.classpath.plusConfigurations += [configurations.provided]
tasks.withType(JavaCompile) {  
    options.encoding = "UTF-8"  
}*/

tomcat {
	httpPort = 9090
	contextPath = 'test'
}

// 创建web默认路径和文件
task create {
	doLast {
		println 'task: create'
		def path = System.getProperty('user.dir')
		new File('src/main/java').mkdirs()
		new File('src/main/groovy').mkdirs()
		new File('src/main/resources').mkdirs()
		new File('src/test/java').mkdirs()
		new File('src/test/groovy').mkdirs()
		new File('src/test/resources').mkdirs()
		new File('src/main/webapp/WEB-INF').mkdirs()
		new File('src/main/webapp/resources/css').mkdirs()
		new File('src/main/webapp/resources/js').mkdirs()
		new File('src/main/webapp/resources/third').mkdirs()
		new File('src/main/webapp/WEB-INF/view').mkdirs()
		// 生成空白web.xml
		def web = new File('src/main/webapp/WEB-INF/web.xml')
		if (!web.exists()) {
			web.createNewFile()
		}
		// 生成index
		def index = new File('src/main/webapp/index.html')
		def writer = index.newPrintWriter()
		writer.write('test')
		writer.flush()
		writer.close()
	}
}